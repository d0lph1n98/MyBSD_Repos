#!/usr/bin/env ruby
#
# Copyright (c) 1999, 2000, 2001, 2002 Ariff Abdullah 
# 	(skywizard@MyBSD.org.my) All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	$MyBSD$
#	$FreeBSD$
#
$DEBUG = true

#fork do
#	Process.setsid()
	#$:.unshift(
	#	"/usr/local/share/bsd-explorer", "/usr/local/share/bsd-explorer/ruby-gtk-fix")
	
	#if ENV.has_key?("RUBY_GTK_EXPERIMENT")
	#	$:.unshift("/usr/local/share/bsd-explorer/ruby-gnome-CVS")
	#end
	$:.unshift(File.dirname(__FILE__))
	fixso = File.join(File.dirname(__FILE__), 'ruby-gtk-fix', 'gtk_fix.so')
	$:.unshift(File.dirname(fixso))
	unless File.file?(fixso)
		cpwd = Dir.pwd()
		begin
			Dir.chdir(File.dirname(fixso))
			system('make distclean')
			system('ruby extconf.rb')
			system('make')
		ensure
			Dir.chdir(cpwd)
		end
	end

	$EXPLORER_SERVER = false
	
	require 'Explorer'
	
	Reg = ExplorerServer.new()
	setup_main()
	
	Explorer.new(ARGV[0].is_a?(String) ? ARGV[0] : Reg.home) do GC.start() end
	Gtk.main
#end
